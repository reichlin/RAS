#!/usr/bin/env python

#
#   extract_image_evidence
#
#   Created on: Nov 14, 2014
#   Authors:   Francisco Vina
#             fevb <at> kth.se
#

#  Copyright (c) 2014, Francisco Vina, CVAP, KTH
#    All rights reserved.

#    Redistribution and use in source and binary forms, with or without
#    modification, are permitted provided that the following conditions are met:
#       * Redistributions of source code must retain the above copyright
#         notice, this list of conditions and the following disclaimer.
#       * Redistributions in binary form must reproduce the above copyright
#         notice, this list of conditions and the following disclaimer in the
#         documentation and/or other materials provided with the distribution.
#       * Neither the name of KTH nor the
#         names of its contributors may be used to endorse or promote products
#         derived from this software without specific prior written permission.

#    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
#    ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
#    WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
#    DISCLAIMED. IN NO EVENT SHALL KTH BE LIABLE FOR ANY
#    DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
#    (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
#    LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
#    ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#    (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
#    SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


import rospy
from ras_msgs.msg import RAS_Evidence
from sensor_msgs.msg import Image
from std_msgs.msg import String

class ExtractImageNode:
    def __init__(self):
        self._image_publisher = rospy.Publisher('/image_evidence', Image)
        self._object_id_publisher = rospy.Publisher('/object_id', String)
        self._evidence_callback = rospy.Subscriber('/evidence', RAS_Evidence, self._evidenceCallback)

    def _evidenceCallback(self, evidence):
        self._image_publisher.publish(evidence.image_evidence)
        self._object_id_publisher.publish(evidence.object_id)

if __name__=="__main__":
    rospy.init_node('extract_image_evidence')
    
    extract_image_node = ExtractImageNode()

    rospy.spin()



